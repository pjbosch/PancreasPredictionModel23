"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Indomethacin received"))
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Indomethacin received")) %>%
kable()
d_table2
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N", "Percentage", "n", "percentage")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Indomethacin received")) %>%
add_row(Variable = "", N = "No Pancreatitis", Percentage = "", n = "Pancreatitis", percentage = "", .before = 1) %>%
kable()
d_table2
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Indomethacin received")) %>%
add_row(Variable = "", N = "No Pancreatitis", Percentage = "", n = "Pancreatitis", percentage = "", .before = 1) %>%
mutate(Model = c("","1+2", "1+2", "1+2", "2", "1+2", "1+2", "1+2",
"1+2", "1+2", "2", "2", "2", "2", "2", "2", "2",
"2", "1+2")) %>%
kable()
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Indomethacin received")) %>%
add_row(Variable = "", N_ = "No Pancreatitis", "%_" = "", N = "Pancreatitis", "%" = "", .before = 1) %>%
mutate(Model = c("","1+2", "1+2", "1+2", "2", "1+2", "1+2", "1+2",
"1+2", "1+2", "2", "2", "2", "2", "2", "2", "2",
"2", "1+2")) %>%
kable()
d_table2
library(stargazer)
stargazer(model_rms_bw)
?stargazer
stargazer(model_rms_bw, type = "latex")
stargazer(model_rms_bw, type = "latex")
```{r, results = "asis"}
stargazer(model_rms_bw, type = "latex")
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
df_relev <- df %>%
select(-id, -site, -age, -risk, -bsphinc, -chole, -pbmal, -status, -type, -bleed, -asa, -asa81, -asa325) %>%
mutate(outcome = ifelse(.$outcome == 0, "No pancreatitis", "Pancreatitis")) %>%
mutate_all(as.factor)
df_relev2 <- df_relev %>%
select(-outcome)
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Trainee performed ERCP",
"Indomethacin received")) %>%
add_row(Variable = "", N_ = "No Pancreatitis", "%_" = "", N = "Pancreatitis", "%" = "", .before = 1) %>%
mutate(Model = c("","1+2", "1", "1+2", "excluded", "1+2", "1", "1+2",
"1", "1+2", "excluded", "2", "excluded", "excluded", "excluded", "excluded", "excluded",
"excluded", "2", "1+2")) %>%
kable()
?stargazer
```{r calibration model_rms, echo=FALSE, results='hide'}
calibrate(model_rms, B = 200) %>%
plot(.)
# Load required packages
library(stargazer)
# Generate sample data
set.seed(123)
x1 <- rnorm(100)
x2 <- rnorm(100)
y <- 2*x1 + 3*x2 + rnorm(100)
# Fit linear regression model
model <- lm(y ~ x1 + x2)
# Use stargazer to display model output
stargazer(model, type = "text", coef = list(model$coefficients[1], model$coefficients[-1]),
se = list(summary(model)$coefficients[1, 2], summary(model)$coefficients[-1, 2]))
model_rms
summary(model_rms)
model_rms
model_rms$coefficients
model_rms$sumwty
model_rms$stats
View(model_rms)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rms)
library(rmda)
library(DescTools)
library(pROC)
library(vtable)
library(stargazer)
# get the directory path where the source file is located
dir_path <- dirname(rstudioapi::getSourceEditorContext()$path)
# set the working directory to the directory path where the source file is located
setwd(dir_path)
rm(dir_path)
# get the dataset
df <- read_csv("pancreatitis.csv")
# To check whether there are missing values in df
df %>%
map(~ sum(is.na(.)))
df %>%
map(~unique(.)) #missing values in "asa", "asa81", "asa325"
# Remove the values after the suffix "_" in each cell and values become numeric
# The three asa columns are removed as we don't consider them relevant predictors
df_clean <- df %>%
select(-asa, -asa81, -asa325) %>%
mutate_all(~ str_remove(., "_.*")) %>%
mutate_all(~ as.numeric(.))
df_relev <- df %>%
select(-id, -site, -age, -risk, -bsphinc, -chole, -pbmal, -status, -type, -bleed, -asa, -asa81, -asa325) %>%
mutate(outcome = ifelse(.$outcome == 0, "No pancreatitis", "Pancreatitis")) %>%
mutate_all(as.factor)
df_relev2 <- df_relev %>%
select(-outcome)
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Trainee performed ERCP",
"Indomethacin received")) %>%
add_row(Variable = "", N_ = "No Pancreatitis", "%_" = "", N = "Pancreatitis", "%" = "", .before = 1) %>%
mutate(Model = c("","1+2", "1", "1+2", "excluded", "1+2", "1", "1+2",
"1", "1+2", "excluded", "2", "excluded", "excluded", "excluded", "excluded", "excluded",
"excluded", "2", "1+2")) %>%
kable()
# First we are building a model with the most relevant clinical parameters (according to literature and expert knowledge)
model_rms <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx, x = TRUE, y = TRUE)
# Next we are building a model with the 20 most relevant predictors
model_rms_20 <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx + recpanc + paninj + brush + train + acinar +
prophystent + therastent + pdstent + sodsom + bstent, x = TRUE, y = TRUE)
# Then we perform backward regression according to p values (< 0.1)
fastbw(model_rms_20, rule="p", sls = 0.1)
# This is the resulting model
model_rms_bw <- lrm(data = df_clean,
outcome ~ pep + psphinc + difcan + amp + age + rx +
train + acinar, x = TRUE, y = TRUE)
# bootstrapping
val <- validate(model_rms, method="boot", B = 200)
val
# to obtain c statistic
round(0.5 * (val[1 , ] + 1),2)
# to obtain an ROC curve
df_pred <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms, type = "fitted"))
plot.roc(df_pred$outcome, df_pred$pred_pancreatitis, asp = NA)
calibrate(model_rms, B = 200) %>%
plot(.)
# bootstrapping
val <- validate(model_rms_bw, method="boot", B = 200)
val
# to obtain c statistic
0.5 * (val[1 , ] + 1)
# to obtain an ROC curve
df_pred <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms_bw, type = "fitted"))
plot.roc(df_pred$outcome, df_pred$pred_pancreatitis, asp = NA)
calibrate(model_rms, B = 200) %>%
plot(.)
d_table2
star <- stargazer(model_rms, model_rms_bw, type = "latex", title = "Table 2. Model predictors", dep.var.labels = "Post ERCP Pancreatitis", single.row = TRUE, header = FALSE)
star <- sub('^.+\\caption.+$','', star)
star
model_rms
1831+188
df_clean$age
mean(df_clean$age)
sd(df_clean$age)
df$outcome
sum(df$outcome)
220/2019
model_rms
View(df_pred)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rms)
library(rmda)
library(DescTools)
library(pROC)
library(vtable)
library(stargazer)
# get the directory path where the source file is located
dir_path <- dirname(rstudioapi::getSourceEditorContext()$path)
# set the working directory to the directory path where the source file is located
setwd(dir_path)
rm(dir_path)
# get the dataset
df <- read_csv("pancreatitis.csv")
# To check whether there are missing values in df
df %>%
map(~ sum(is.na(.)))
df %>%
map(~unique(.)) #missing values in "asa", "asa81", "asa325"
# Remove the values after the suffix "_" in each cell and values become numeric
# The three asa columns are removed as we don't consider them relevant predictors
df_clean <- df %>%
select(-asa, -asa81, -asa325) %>%
mutate_all(~ str_remove(., "_.*")) %>%
mutate_all(~ as.numeric(.))
df_relev <- df %>%
select(-id, -site, -age, -risk, -bsphinc, -chole, -pbmal, -status, -type, -bleed, -asa, -asa81, -asa325) %>%
mutate(outcome = ifelse(.$outcome == 0, "No pancreatitis", "Pancreatitis")) %>%
mutate_all(as.factor)
df_relev2 <- df_relev %>%
select(-outcome)
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Trainee performed ERCP",
"Indomethacin received")) %>%
add_row(Variable = "", N_ = "No Pancreatitis", "%_" = "", N = "Pancreatitis", "%" = "", .before = 1) %>%
mutate(Model = c("","1+2", "1", "1+2", "excluded", "1+2", "1", "1+2",
"1", "1+2", "excluded", "2", "excluded", "excluded", "excluded", "excluded", "excluded",
"excluded", "2", "1+2")) %>%
kable()
# First we are building a model with the most relevant clinical parameters (according to literature and expert knowledge)
model_rms <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx, x = TRUE, y = TRUE)
# Next we are building a model with the 20 most relevant predictors
model_rms_20 <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx + recpanc + paninj + brush + train + acinar +
prophystent + therastent + pdstent + sodsom + bstent, x = TRUE, y = TRUE)
# Then we perform backward regression according to p values (< 0.1)
fastbw(model_rms_20, rule="p", sls = 0.1)
# This is the resulting model
model_rms_bw <- lrm(data = df_clean,
outcome ~ pep + psphinc + difcan + amp + age + rx +
train + acinar, x = TRUE, y = TRUE)
# bootstrapping
val1 <- validate(model_rms, method="boot", B = 200)
val1
# to obtain c statistic
round(0.5 * (val1[1 , ] + 1),2)
# to obtain an ROC curve
df_pred1 <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms, type = "fitted"))
plot.roc(df_pred1$outcome, df_pred1$pred_pancreatitis, asp = NA)
calib1 <- calibrate(model_rms, B = 200) %>%
plot(.)
# bootstrapping
val2 <- validate(model_rms_bw, method="boot", B = 200)
val2
# to obtain c statistic
0.5 * (val2[1 , ] + 1)
# to obtain an ROC curve
df_pred2 <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms_bw, type = "fitted"))
plot.roc(df_pred2$outcome, df_pred2$pred_pancreatitis, asp = NA)
calibrate(model_rms, B = 200) %>%
calib2 <- plot(.)
View(df_pred1)
View(df_pred2)
df_pred1 %>% filter(id == 18)
df_pred1 %>% filter(id == 2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rms)
library(rmda)
library(DescTools)
library(pROC)
library(vtable)
library(stargazer)
# get the directory path where the source file is located
dir_path <- dirname(rstudioapi::getSourceEditorContext()$path)
# set the working directory to the directory path where the source file is located
setwd(dir_path)
rm(dir_path)
# get the dataset
df <- read_csv("pancreatitis.csv")
# To check whether there are missing values in df
df %>%
map(~ sum(is.na(.)))
df %>%
map(~unique(.)) #missing values in "asa", "asa81", "asa325"
# Remove the values after the suffix "_" in each cell and values become numeric
# The three asa columns are removed as we don't consider them relevant predictors
df_clean <- df %>%
select(-asa, -asa81, -asa325) %>%
mutate_all(~ str_remove(., "_.*")) %>%
mutate_all(~ as.numeric(.))
df_relev <- df %>%
select(-id, -site, -age, -risk, -bsphinc, -chole, -pbmal, -status, -type, -bleed, -asa, -asa81, -asa325) %>%
mutate(outcome = ifelse(.$outcome == 0, "No pancreatitis", "Pancreatitis")) %>%
mutate_all(as.factor)
df_relev2 <- df_relev %>%
select(-outcome)
d_table <- st(df_relev, group = "outcome", out = "return")
colnames(d_table) <- c("Variable", "N_", "%_", "N", "%")
d_table2 <- d_table %>%
filter(str_detect(Variable, "1_")) %>%
mutate(Variable = c("Female",
"Sphincter Oddi dysfunction",
"Previous post ERCP pancreatitis",
"Recurrent pancreatitis",
"Pancreatic Sphincterotomy performed",
"Sphincter pre-cut",
"Difficult cannulation",
"Pneumatic dilation of papilla",
"Ampullectomy performed",
"Contrast injection",
"Acinarization on imaging",
"Brushing performed",
"Prophylactic duct stent placed",
"Therapeutic duct stent placed",
"Duct stent placed",
"Sphincter manometry performed",
"Biliary stent placed",
"Trainee performed ERCP",
"Indomethacin received")) %>%
add_row(Variable = "", N_ = "No Pancreatitis", "%_" = "", N = "Pancreatitis", "%" = "", .before = 1) %>%
mutate(Model = c("","1+2", "1", "1+2", "excluded", "1+2", "1", "1+2",
"1", "1+2", "excluded", "2", "excluded", "excluded", "excluded", "excluded", "excluded",
"excluded", "2", "1+2")) %>%
kable()
# First we are building a model with the most relevant clinical parameters (according to literature and expert knowledge)
model_rms <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx, x = TRUE, y = TRUE)
# Next we are building a model with the 20 most relevant predictors
model_rms_20 <- lrm(data = df_clean,
outcome ~ sod + pep + psphinc + precut + difcan + pneudil + amp +
age + gender + rx + recpanc + paninj + brush + train + acinar +
prophystent + therastent + pdstent + sodsom + bstent, x = TRUE, y = TRUE)
# Then we perform backward regression according to p values (< 0.1)
fastbw(model_rms_20, rule="p", sls = 0.1)
# This is the resulting model
model_rms_bw <- lrm(data = df_clean,
outcome ~ pep + psphinc + difcan + amp + age + rx +
train + acinar, x = TRUE, y = TRUE)
# bootstrapping
val1 <- validate(model_rms, method="boot", B = 200)
val1
# to obtain c statistic
round(0.5 * (val1[1 , ] + 1),2)
# to obtain an ROC curve
df_pred1 <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms, type = "fitted"))
plot.roc(df_pred1$outcome, df_pred1$pred_pancreatitis, asp = NA)
calib1 <- calibrate(model_rms, B = 200) %>%
plot(.)
# bootstrapping
val2 <- validate(model_rms_bw, method="boot", B = 200)
val2
# to obtain c statistic
0.5 * (val2[1 , ] + 1)
# to obtain an ROC curve
df_pred2 <- df_clean %>%
mutate(pred_pancreatitis = predict(model_rms_bw, type = "fitted"))
plot.roc(df_pred2$outcome, df_pred2$pred_pancreatitis, asp = NA)
calib2 <- calibrate(model_rms, B = 200) %>%
plot(.)
df_pred1 %>% filter(id == 2)
d_table2
star = stargazer(model_rms, model_rms_bw, type = "latex", title = "Table 2. Model predictors", dep.var.labels = "Post ERCP Pancreatitis", single.row = TRUE, header = FALSE)
star = sub('^.+\\caption.+$','', star)
#https://stackoverflow.com/questions/55521433/getting-rid-of-table-1-from-the-top-of-stargazer
cat(star, sep='\n')
par(mfrow = c(1,2))
calib1
calib2
par(mfrow = c(1,1))
str(calib1)
calibrate(model_rms, B = 200) %>%
plot(.)
par(mfrow = c(1,2))
calibrate(model_rms, B = 200) %>%
plot(.)
calibrate(model_rms_bw, B = 200) %>%
plot(.)
par(mfrow = c(1,1))
par(mfrow = c(2,1))
calibrate(model_rms, B = 200) %>%
plot(.)
calibrate(model_rms_bw, B = 200) %>%
plot(.)
calibrate(model_rms, B = 200) %>%
plot(.)
calibrate(model_rms_bw, B = 200) %>%
plot(.)
?stargazer
